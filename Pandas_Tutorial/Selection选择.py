import numpy as np
import pandas as pd

dates=pd.date_range('20180101',periods=6)
df=pd.DataFrame(np.random.randn(6,4),index=dates,columns=list('ABCD'))

'------------------------------Getting------------------------'
print(df["A"])#选择一个列，这是一个Series ,=df.A
# 2018-01-01   -1.191864
# 2018-01-02    0.546384
# 2018-01-03   -1.045602
# 2018-01-04   -0.024654
# 2018-01-05    0.527651
# 2018-01-06   -1.185912
# Freq: D, Name: A, dtype: float64
print(df.A)
# 2018-01-01    0.146193
# 2018-01-02   -0.939254
# 2018-01-03   -0.856235
# 2018-01-04    1.611989
# 2018-01-05    1.615691
# 2018-01-06    1.652184
# Freq: D, Name: A, dtype: float64
'''-------------[] : 切片行,行！！------------------------'''
print(df[0:2])
#                    A         B         C         D
# 2018-01-01  0.094134 -1.519884 -2.894291 -0.496632
# 2018-01-02 -1.634671 -0.944288  0.330543 -0.958448
print(df['20180101':'20180102'])
'''直接df['2018010']作为索引是不行的！！ '''
#                    A         B         C         D
# 2018-01-01 -0.955448 -0.325363 -0.782265 -0.668950
# 2018-01-02  0.338246 -1.829736 -0.655977 -0.257679
'''-------------------按标签选择 列！不是方法-----------------------'''
print(df.loc[dates[0]])#获得第一行
# A    0.928788
# B    0.860280
# C    2.343776
# D    0.524313
'''多轴'''
print(df.loc[:,['A','B']])
#                    A         B
# 2018-01-01  0.928788  0.860280
# 2018-01-02  1.134215 -0.418375
# 2018-01-03  1.046821 -0.069561
# 2018-01-04 -0.112128  0.713431
# 2018-01-05 -0.962898  1.221903
# 2018-01-06  1.006333  0.837729
'''---------------[]+loc------------------'''
'''第一个没法用[1:3]代替 '''
print(df.loc['20180102':'20180103',['A','B']])
#                    A         B
# 2018-01-02 -1.119113 -0.661644
# 2018-01-03 -2.240398  0.068500
print(df.loc['20180102',['A','B']])
# A    0.130442
# B   -0.129986
# Name: 2018-01-02 00:00:00, dtype: float64
'''获取标量'''
print(df.loc[dates[0],'A'])
#df.at(dates[0],'A')
'''---------------------按位置选择！！!好用！!！------------------------'''
print(df.iloc[3])
# A   -0.103530
# B   -1.704884
# C   -0.212858
# D    0.045798
# Name: 2018-01-04 00:00:00, dtype: float64
'''整型切片'''
print(df.iloc[3:5,0:2])#这个好用 啊
#                    A         B
# 2018-01-04 -1.369974 -0.004308
# 2018-01-05 -1.488259  0.473340
print(df.iloc[[1,2,4],[0,2]])
#                    A         C
# 2018-01-02 -1.236996 -0.832521
# 2018-01-03 -2.134610  0.753257
# 2018-01-05  0.321610 -0.331798
print(df.iloc[1:3,:])
#                    A         B         C         D
# 2018-01-02  0.520012  0.137535  0.214787  0.234002
# 2018-01-03  0.008347  0.812484  0.308480 -0.907983
print(df.iloc[:,1:3])
#                    B         C
# 2018-01-01 -2.222626  0.959942
# 2018-01-02  1.275092  1.270924
# 2018-01-03  0.579116  0.935860
# 2018-01-04 -0.336186 -0.064980
# 2018-01-05 -0.005853  0.965681
# 2018-01-06 -0.217128  0.644872
print(df.iloc[1,1])
# 0.638753840433
'''---------------------布尔索引--------------------------'''
print(df[df.A>0])#输出A列大于0的行
#                    A         B         C         D
# 2018-01-03  0.583805 -0.119903 -1.153269 -0.608400
# 2018-01-04  0.675420 -1.721249 -1.231697  0.340847
# 2018-01-06  1.167072  0.334743 -0.464183 -1.565509
'''使用isin()过滤'''
df2=df.copy()
df2['E'] = ['one', 'one','two','three','four','three']
print(df2)
#                    A         B         C         D      E
# 2018-01-01  0.940467 -1.032577  1.777216 -0.426302    one
# 2018-01-02 -0.042281 -0.164162 -1.224013  0.406540    one
# 2018-01-03 -1.408383  0.402848  0.429117 -1.143437    two
# 2018-01-04  0.093973  0.992960  1.107758 -0.140807  three
# 2018-01-05 -0.338028 -0.235957  0.073132 -0.077621   four
# 2018-01-06  0.069432 -0.665183  0.236649 -0.279693  three
print(df2[df2['E'].isin(['two','four'])])
#                    A         B         C         D     E
# 2018-01-03  0.433767 -1.129679 -1.723006  0.171909   two
# 2018-01-05  0.583141  0.591976  0.736428  0.722515  four

'''---------------------设定-----------------------------'''

s1=pd.Series([1,2,3,4,5,6],index=pd.date_range('20180102',periods=6))
print(s1)
# 2018-01-02    1
# 2018-01-03    2
# 2018-01-04    3
# 2018-01-05    4
# 2018-01-06    5
# 2018-01-07    6
# Freq: D, dtype: int64
df['F']=s1
print(df)
'''根据索引自动对齐数据'''
#                    A         B         C         D    F
# 2018-01-01 -0.331110  0.260160  0.381442  0.221973  NaN
# 2018-01-02 -0.283131  0.129837  2.020401  0.188974  1.0
# 2018-01-03  1.412425  0.459766 -1.376462 -1.714318  2.0
# 2018-01-04  0.198975  1.136309 -0.475784  1.323559  3.0
# 2018-01-05  0.567429 -0.417098 -1.285047 -0.979458  4.0
# 2018-01-06  0.019082  0.340293 -0.320127  0.381205  5.0
'''使用标签设置位置'''
df.at[dates[0],'A']=0
'''根据位置设置位置'''
df.iat[0,1]=0
'''使用numpy数组设置'''
df.loc[:,'D']=np.array([5]*len(df))
print(df)
#                    A         B         C  D    F
# 2018-01-01  0.000000  0.000000  0.603163  5  NaN
# 2018-01-02  0.712748  0.356498 -1.030558  5  1.0
# 2018-01-03 -0.025210  0.439068 -0.400534  5  2.0
# 2018-01-04 -0.121836 -1.888024 -0.334414  5  3.0
# 2018-01-05 -0.716267 -1.884813 -1.446267  5  4.0
# 2018-01-06 -0.661648  0.691776  0.679012  5  5.0
'''where'''
df2=df.copy()
df2[df2>0]=-df2
print(df2)
#                    A         B         C  D    F
# 2018-01-01  0.000000  0.000000 -0.833814 -5  NaN
# 2018-01-02 -1.079495 -0.213257 -0.471175 -5 -1.0
# 2018-01-03 -1.068095 -0.735139 -1.262257 -5 -2.0
# 2018-01-04 -0.801962 -1.213106 -0.458798 -5 -3.0
# 2018-01-05 -0.675021 -0.066319 -0.353539 -5 -4.0
# 2018-01-06 -0.029063 -0.098486 -2.278298 -5 -5.0
